@model AAUP_LabMaster.EntityDTO.LabDTO
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Add New Lab";
}
<html>
<head>
    <meta charset="utf-8" />
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<div class="min-h-screen bg-gray-100 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-3xl w-full space-y-8 p-8 bg-white rounded-xl shadow-lg border border-gray-200">

        <h1 class="text-4xl font-extrabold text-gray-900 text-center">Add New Lab</h1>
        <p class="mt-2 text-center text-sm text-gray-600">
            Fill in the details below to create a new laboratory.
        </p>

        @* Display success/error messages from TempData *@
        @if (TempData["Message"] != null)
        {
            <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-md mb-4" role="alert">
                <div class="flex items-center">
                    <div class="py-1"><svg class="fill-current h-6 w-6 text-green-500 mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z"/></svg></div>
                    <div>@TempData["Message"]</div>
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-md mb-4" role="alert">
                <div class="flex items-center">
                    <div class="py-1"><svg class="fill-current h-6 w-6 text-red-500 mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z"/></svg></div>
                    <div>@TempData["ErrorMessage"]</div>
                </div>
            </div>
        }

        <form asp-action="AddLab" asp-controller="Admin" method="post" class="space-y-6">
            <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm p-3 border border-red-300 bg-red-50 rounded-md"></div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label asp-for="Name" class="block text-sm font-medium text-gray-700 mb-1">Lab Name <span class="text-red-500">*</span></label>
                    <input asp-for="Name" class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="e.g., Chemistry Lab 101" />
                    <span asp-validation-for="Name" class="text-red-600 text-xs mt-1"></span>
                </div>

                <div>
                    <label asp-for="SelectedSupervisorId" class="block text-sm font-medium text-gray-700 mb-1">Assign Supervisor <span class="text-red-500">*</span></label>
                    <select asp-for="SelectedSupervisorId" class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm bg-white">
                        <option value="">-- Select a Supervisor --</option>
                        @if (ViewBag.SupervisorsList != null)
                        {
                            @foreach (var supervisor in ViewBag.SupervisorsList as List<SelectListItem>)
                            {
                                <option value="@supervisor.Value">@supervisor.Text</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="SelectedSupervisorId" class="text-red-600 text-xs mt-1"></span>
                </div>
            </div>

            <div>
                <label asp-for="Description" class="block text-sm font-medium text-gray-700 mb-1">Description (Optional)</label>
                <textarea asp-for="Description" rows="4" class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Provide a brief description of the lab, its purpose, etc."></textarea>
                <span asp-validation-for="Description" class="text-red-600 text-xs mt-1"></span>
            </div>

            @* Dynamic Equipment Input Section *@
            <div class="border border-gray-200 p-4 rounded-md shadow-sm bg-gray-50">
                <h3 class="text-lg font-semibold text-gray-800 mb-3 flex items-center">
                    Equipment
                    <span class="ml-2 text-sm text-gray-500">(Add multiple items)</span>
                </h3>
                <div id="equipment-inputs" class="space-y-3">
                    @if (Model.EquipmentNames != null && Model.EquipmentNames.Any())
                    {
                        for (int i = 0; i < Model.EquipmentNames.Count; i++)
                        {
                            <div class="flex items-center space-x-3">
                                <input type="text" name="EquipmentNames[@i]" value="@Model.EquipmentNames[i]" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="e.g., Microscope, Beaker" />
                                <button type="button" onclick="removeEquipmentField(this)" class="p-2 text-red-600 hover:text-red-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 rounded-full">
                                    <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clip-rule="evenodd"></path></svg>
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="flex items-center space-x-3">
                            <input type="text" name="EquipmentNames" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="e.g., Microscope, Beaker" />
                            <button type="button" onclick="addEquipmentField()" class="p-2 text-blue-600 hover:text-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded-full">
                                <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
                            </button>
                        </div>
                    }
                </div>
                <span asp-validation-for="EquipmentNames" class="text-red-600 text-xs mt-1 block"></span>
            </div>

            <div class="flex justify-end space-x-3 mt-6">
                <a asp-action="LabSettings" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    <svg class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg>
                    Back to List
                </a>
                <button type="submit" class="inline-flex items-center px-6 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <svg class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M11 5a1 1 0 10-2 0v3H6a1 1 0 100 2h3v3a1 1 0 102 0v-3h3a1 1 0 100-2h-3V5z"/></svg>
                    Add Lab
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    function addEquipmentField() {
        var container = document.getElementById('equipment-inputs');
        var inputCount = container.querySelectorAll('input[name^="EquipmentNames"]').length;
        var newDiv = document.createElement('div');
        newDiv.className = 'flex items-center space-x-3 mt-3'; 
        newDiv.innerHTML = `
            <input type="text" name="EquipmentNames[${inputCount}]" class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Equipment Name" />
            <button type="button" onclick="removeEquipmentField(this)" class="p-2 text-red-600 hover:text-red-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 rounded-full">
                <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm6 0a1 1 0 11-2 0v6a1 1 0 112 0V8z" clip-rule="evenodd"></path></svg>
            </button>
        `;
        container.appendChild(newDiv);
        updateEquipmentFieldNames(); // Ensure correct re-indexing
    }

    function removeEquipmentField(button) {
        button.parentNode.remove();
        updateEquipmentFieldNames(); // Re-index after removal
    }

    function updateEquipmentFieldNames() {
        var inputs = document.querySelectorAll('#equipment-inputs input[name^="EquipmentNames"]');
        inputs.forEach((input, index) => {
            input.name = `EquipmentNames[${index}]`;
        });
    }

    document.addEventListener('DOMContentLoaded', updateEquipmentFieldNames);
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}